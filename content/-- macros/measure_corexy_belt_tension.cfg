[gcode_macro MEASURE_COREXY_BELT_TENSION]
description: Generates resonance graph used to ensure belts are equally tensioned.
gcode:
  {% set freq_start = params.FREQUENCY_START|default(10)|int %}
  {% set freq_end = params.FREQUENCY_END|default(133)|int %}
  {% if printer.toolhead.homed_axes != "xyz" %}
      G28
  {% endif %}

  {% if printer.quad_gantry_level %}
      {% set bed_levelling = printer.quad_gantry_level %}
  {% endif %}
  {% if printer.z_tilt %}
      {% set bed_levelling = printer.z_tilt %}
  {% endif %}
  {% if bed_levelling and printer["print_setting bed_level"].value == true %}
      { action_respond_info("**** Bed Levelling") }
      {% if bed_levelling.applied == false %}
          {% if printer.quad_gantry_level %}
              { action_respond_info("Performing Quad Gantry Level") }
              QUAD_GANTRY_LEVEL
          {% endif %}
          {% if printer.z_tilt %}
              { action_respond_info("Performing Z Tilt Adjust") }
              Z_TILT_ADJUST
          {% endif %}
          SET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=last_x_max VALUE=0
      {% else %}
          { action_respond_info("Skipping Bed Levelling since it was already performed") }
      {% endif %}
  {% endif %}  
  {% if params.AXIS is defined %}
    {% if params.AXIS|lower == 'x' %}
      TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper FREQ_START={freq_start} FREQ_END={freq_end}
      TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower FREQ_START=10 FREQ_END=11
    {% elif params.AXIS|lower == 'y' %}
      TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper FREQ_START=10 FREQ_END=11
      TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower FREQ_START={freq_start} FREQ_END={freq_end}
    {% else %}
      {action_raise_error("Unknown axis specified. Expected X or Y.")}
    {% endif %}
  {% else %}
    TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper FREQ_START={freq_start} FREQ_END={freq_end}
    TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower FREQ_START={freq_start} FREQ_END={freq_end}
  {% endif %}
  RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
  RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"

[gcode_shell_command generate_belt_tension_graph]
command: ~/printer_data/config/shaper/generate_belt_tension_graph.sh
timeout: 90.
verbose: True